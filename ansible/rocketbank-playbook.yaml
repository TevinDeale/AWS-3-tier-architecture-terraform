- name: Install PostgreSQL Python, and Psycopg2 on Database Servers
  hosts: databases
  remote_user: ec2-user
  become: true

  tasks:
    - name: Install PostgreSQL
      ansible.builtin.yum:
        name: postgresql15-server
        state: latest

    - name: Install Python
      ansible.builtin.yum:
        name: python
        state: present

    - name: Install pip
      ansible.builtin.yum:
        name: python3-pip
        state: present

    - name: Install Psycopg2
      ansible.builtin.pip:
        name: psycopg2-binary
        state: present
        executable: pip3.9

- name: Initialize Master Database
  hosts: rb-db-use-1a
  remote_user: ec2-user
  become: true

  tasks:
    - name: Init PostgreSQL Database
      ansible.builtin.command:
        cmd: /usr/bin/postgresql-setup --initdb
      args:
        creates: /var/lib/pgsql/data

    - name: Ensure that PostgreSQL is started and enabled at boot
      ansible.builtin.service:
        name: postgresql
        state: started
        enabled: true

    - name: Change listening address to all
      become_user: postgres
      community.postgresql.postgresql_set:
        name: listen_addresses
        value: "*"
      register: change_listen_address

    - name: Open port 5432
      become_user: postgres
      community.postgresql.postgresql_set:
        name: port
        value: 5432
      register: change_port

    - name: Restart Database Service
      ansible.builtin.command:
        cmd: systemctl restart postgresql
      when: change_listen_address.changed or change_port.changed

- name: Configure Master DB
  hosts: rb-db-use-1a
  become: true
  vars_files:
    - rocketbank-vault.yaml
  vars:
    pg_replication_username: "{{ pg_replication_username }}"
    pg_replication_password: "{{ pg_replication_password }}"

  tasks:
    - name: Copy PostgreSQL configuration file
      become: true
      copy:
        src: rocketbankdev_0522
        dest: /ec2-user/home/db/
        owner: postgres
        group: postgres
        mode: '0644'

    - name: Create RocketBank DB
      become_user: postgres
      community.postgresql.postgresql_db:
        name: rocketbank
        state: present
      register: created_rocketbank_db

    - name: Restore Rocketbank DB
      become_user: postgres
      community.postgresql.postgresql_db:
        name: rocketbank
        target: /ec2-user/home/db/rocketbankdev_0522
        state: restore
      when: created_rocketbank_db.changed

    - name: Create repuser
      become_user: postgres
      community.postgresql.postgresql_query:
        db: rocketbank
        query: "CREATE USER {{ pg_replication_username }} WITH REPLICATION PASSWORD '{{ pg_replication_password }}'"
      when: created_rockebank_db.changed

    - name: Add repuser to pg_hba with password auth
      become_user: root
      community.postgresql.postgresql_pg_hba:
        dest: /var/lib/pgsql/data/pg_hba.conf
        contype: host
        users: repuser
        source: 192.168.30.0/24
        databases: replication
        method: trust
      register: add_repuser_pg_hba

    - name: Restart Database Service
      ansible.builtin.command:
        cmd: systemctl restart postgresql
      when: add_repuser_pg_hba.changed

- name: Configure Replication Node 1
  hosts: rb-db-use-1b
  become: true
  vars_files:
    - rocketbank-vault.yaml
  vars:
    pg_replication_username: "{{ pg_replication_username }}"
    pg_replication_password: "{{ pg_replication_password }}"
  
  tasks:
    - name: Pull back from Master Node using pg_basebackup
      ansible.builtin.command:
        cmd: pg_basebackup -h "{{ hostvars['rb-db-use-1a']['ansible_host'] }}" -U "{{ pg_replication_username }}" -W --checkpoint=fast -D /var/lib/pgsql/data -d "dbname=rocketbank" -R --slot=rep_2 -C
      args:
        creates: /var/lib/pgsql/data

- name: Configure Replication Node 2
  hosts: rb-db-use-1c
  become: true
  become_user: postgres
  vars_files:
    - rocketbank-vault.yaml
  vars:
    pg_replication_username: "{{ pg_replication_username }}"
    pg_replication_password: "{{ pg_replication_password }}"
  
  tasks:
    - name: Pull back from Master Node using pg_basebackup
      ansible.builtin.command:
        cmd: pg_basebackup -h "{{ hostvars['rb-db-use-1a']['ansible_host'] }}" -U "{{ pg_replication_username }}" -W --checkpoint=fast -D /var/lib/pgsql/data -d "dbname=rocketbank" -R --slot=rep_3 -C
      args:
        creates: /var/lib/pgsql/data
