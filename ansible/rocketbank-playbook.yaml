- name: Install PostgreSQL, pgpool2, and Psycopg2 on Database Servers
  hosts: databases
  become: true

  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install PostgreSQL
      apt:
        name: postgresql-16
        state: present

    - name: Install Psycopg2
      apt:
        name: python3-psycopg2
        state: present

    - name: Install pgpool2
      apt:
        name: pgpool2
        state: present

    - name: Install ACL
      apt:
        name: acl
        state: present

- name: Initialize Master Database
  hosts: rb-db-use-1a
  become: true

  tasks:
    - name: Ensure that PostgreSQL is started and enabled at boot
      ansible.builtin.service:
        name: postgresql
        state: started
        enabled: true

    - name: Change listening address to all
      become_user: postgres
      lineinfile:
        path: /etc/postgresql/16/main/postgresql.conf
        regexp: '^#?(listen_addresses = )(.*)$'
        line: "listen_addresses = '*'"
        backup: true
      register: change_listen_address
      notify: Restart PostgreSQL

  handlers:
    - name: Restart PostgreSQL
      service:
        name: postgresql
        state: restarted

- name: Configure Master DB
  hosts: rb-db-use-1a
  become: true
  vars_files:
    - rocketbank-vault.yaml
  vars:
    pg_replication_username: "{{ pg_replication_username }}"
    pg_replication_password: "{{ pg_replication_password }}"

  tasks:
    - name: Copy PostgreSQL configuration file
      become: true
      copy:
        src: rocketbankdev_0522
        dest: /home/ubuntu/pgsql/rocketbank/
        owner: postgres
        group: postgres
        mode: '0644'

    - name: Create RocketBank DB
      become_user: postgres
      community.postgresql.postgresql_db:
        name: rocketbank
        state: present
      register: created_rocketbank_db

    - name: Restore Rocketbank DB
      become: true
      become_user: postgres
      community.postgresql.postgresql_db:
        name: rocketbank
        target: /home/ubuntu/pgsql/rocketbank/rocketbankdev_0522
        state: restore
      when: created_rocketbank_db.changed

    - name: Create repuser
      become_user: postgres
      community.postgresql.postgresql_query:
        db: rocketbank
        query: "CREATE USER {{ pg_replication_username }} WITH REPLICATION PASSWORD '{{ pg_replication_password }}'"
      when: created_rocketbank_db.changed

    - name: Add repuser to pg_hba with password auth
      become_user: root
      community.postgresql.postgresql_pg_hba:
        dest: /etc/postgresql/16/main/pg_hba.conf
        contype: host
        users: repuser
        source: 192.168.30.0/24
        databases: replication
        method: trust
      register: add_repuser_pg_hba

    - name: Restart Database Service
      ansible.builtin.command:
        cmd: systemctl restart postgresql
      when: add_repuser_pg_hba.changed

- name: Configure Replication Node 1 from Backup from Master
  hosts: rb-db-use-1b
  vars_files:
    - rocketbank-vault.yaml
  vars:
    pg_replication_username: "{{ pg_replication_username }}"
    pg_replication_password: "{{ pg_replication_password }}"

  tasks:
    - name: Check if exist file exists
      stat:
        path: /home/ubuntu/exist.txt
      register: exist_check

    - name: Create a random file to check
      shell: |
        echo "I exist" >> /home/ubuntu/exist.txt
      when: not exist_check.stat.exists
      register: exist

    - name: Stop Postgres Service
      ansible.builtin.command:
        cmd: sudo systemctl stop postgresql
      when: exist.changed

    - name: Remove existing data
      ansible.builtin.command:
        cmd: sudo rm -rf /var/lib/postgresql/16/main
      args:
        creates: /var/lib/postgresql/16/main
      when: exist.changed

    - name: Pull back from Master Node using pg_basebackup
      shell: |
        sudo -u postgres pg_basebackup \
          -h "{{ hostvars['rb-db-use-1a']['ansible_host'] }}" \
          -U "{{ pg_replication_username }}" \
          --checkpoint=fast \
          -D /var/lib/postgresql/16/main \
          -d "dbname=rocketbank" \
          -R --slot=rep_node_0 \
          -C
      environment: 
        PGPASSWORD: "{{ pg_replication_password }}"
      when: exist.changed

    - name: Start Postgres Service
      become: true
      ansible.builtin.command:
        cmd: systemctl start postgresql

    - name: Change listening address to all
      become: true
      become_user: postgres
      lineinfile:
        path: /etc/postgresql/16/main/postgresql.conf
        regexp: '^#?(listen_addresses = )(.*)$'
        line: "listen_addresses = '*'"
        backup: true
      register: change_listen_address
      notify: Restart PostgreSQL

  handlers:
    - name: Restart PostgreSQL
      become: true
      service:
        name: postgresql
        state: restarted

- name: Configure Replication Node 2 from Backup from Master
  hosts: rb-db-use-1c
  vars_files:
    - rocketbank-vault.yaml
  vars:
    pg_replication_username: "{{ pg_replication_username }}"
    pg_replication_password: "{{ pg_replication_password }}"

  tasks:
    - name: Check if exist file exists
      stat:
        path: /home/ubuntu/exist.txt
      register: exist_check

    - name: Create a random file to check
      shell: |
        echo "I exist" >> /home/ubuntu/exist.txt
      when: not exist_check.stat.exists
      register: exist

    - name: Stop Postgres Service
      ansible.builtin.command:
        cmd: sudo systemctl stop postgresql
      when: exist.changed

    - name: Remove existing data
      ansible.builtin.command:
        cmd: sudo rm -rf /var/lib/postgresql/16/main
      when: exist.changed

    - name: Pull back from Master Node using pg_basebackup
      shell: |
        sudo -u postgres pg_basebackup \
          -h "{{ hostvars['rb-db-use-1a']['ansible_host'] }}" \
          -U "{{ pg_replication_username }}" \
          --checkpoint=fast \
          -D /var/lib/postgresql/16/main \
          -d "dbname=rocketbank" \
          -R --slot=rep_node_1 \
          -C
      environment: 
        PGPASSWORD: "{{ pg_replication_password }}"
      when: exist.changed

    - name: Start Postgres Service
      become: true
      ansible.builtin.command:
        cmd: systemctl start postgresql

    - name: Change listening address to all
      become: true
      become_user: postgres
      lineinfile:
        path: /etc/postgresql/16/main/postgresql.conf
        regexp: '^#?(listen_addresses = )(.*)$'
        line: "listen_addresses = '*'"
        backup: true
      register: change_listen_address
      notify: Restart PostgreSQL

  handlers:
    - name: Restart PostgreSQL
      become: true
      service:
        name: postgresql
        state: restarted

- name: Configure pgpool-II
  become: true
  hosts: databases

  tasks:
    - name: Ensure that pgpool is started and enabled at boot
      ansible.builtin.service:
        name: pgpool
        state: started
        enabled: true

    - name: Create pgpool Unix User
      user:
        name: pgpool
        comment: "pgpool"
        group: users
        shell: /bin/bash
        state: present
        